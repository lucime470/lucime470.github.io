[{"title":"小六壬起课器","url":"/2025/02/24/2/","content":"\n# 小六壬起课器.py\n\n## （仅起到起课作用）\n\n​\t小六壬，古代中国占卜法，古代主要用于军事韬略，尤以别名诸葛亮马前课著名。\n\n​\t在所有术数中时间都是首位，所以第一则是获取当前用户时间。在运行时可能会遇到用户输入各种类型的数据，所以使用try来运行可能出错的代码，并且在报错后循环让用户重新输入。\n\n```python\nwhile True: #无限循环\n   try: #尝试运行可能出错的代码\n      time=int(input(\"以24时制输入当地当前时:\")) #获取时间  \n   except (ValueError, TypeError): #数值错误和数值类型错误时的处理\n      print(\"错误,输入数字有误,例:当前13:11,则输入13\")\n      continue #跳过下面的循环，防止因为上面错误导致time没有获取数值而使下面的判断报错\n   if time in list10: #判断输入数字是否为0~23\n      break #正常则执行下面的代码\n   else: #不符合则提示并循环\n      print(\"错误,输入数字有误,例:当前13:11,则输入13\")\n```\n\n​\t小六壬中常见起课方式有日期起课以及随机数起课，在这里仅做了随机数起课。（后续可能增加以日期起课的选择）仍然使用try语句来处理可能遇到的输入数据类型错误，再将得到三个随机数储存。\n\n```python\nprint(\"输入心中立即想到的任意大小的正整数\")\nnumbers1 = [None, None, None]  # 用列表存储 x, y, z\nfor i in range(3): # 循环三次以获取三个数字\n    while True: #无限循环\n        try:\n            numbers1[i] = int(input(f\"请输入第 {i + 1} 个数字: \")) #使用f语句\n            if numbers1[i] <= 0:  # 检查输入的数字是否为正整数\n                print(\"输入数字有误，请输入正负整数\")\n            else:\n                break  # 如果输入有效，则退出当前的 while 循环\n        except (ValueError,TypeError):\n            print(\"输入数字有误，请输入正负整数\")\nx, y, z = numbers1 # 将输入的数字赋值给 x, y, z\n```\n\n​\t创建一个列表储存十二个时辰，由于一个时辰对应两个小时，所以列表中时辰储存两次，再将时间对应列表中的时辰，以便后续输出，以及字典的调用。\n\n```python\nlist1=['子','丑','丑','寅','寅','卯','卯','辰','辰','巳','巳','午','午','未','未','申','申','酉','酉','戌','戌','亥','亥','子'] #创建时辰列表\n```\n\n```python\ntime1 = list1[time] #将时间对应时辰\n```\n\n​\t再调用字典将时辰对应12小时制的数字。\n\n```python\ntime2 = dict1.get(time1,'无效值') #调用字典将时辰与数字对应，time1上不用加''\n```\n\n​\t相较于第一版，增加了活六神的功能,仅做展示。\n\n```python\ntime3 = time2%6 #对time2取余数，可知龙头宫位\nwhole = 6-time3 #得出青龙后还有几个元素作为整体\nelement=list11[:whole+1] #将青龙以及后面的元素作为整体\nif time3 == 1:\n   list12=list11\nelif time3 == 0:\n   list12=['朱雀','勾陈','白虎','玄武','腾蛇','青龙']\nelse:\n   list12=[x for x in list11 if x not in element]+element #先遍历列表8不属于整体的元素再加上整体中的元素生成新列表10\nx5,y5,z5 = list5[x1],list5[y1],list5[z1] #分别给三才赋值六神\nx6,y6,z6 = list12[x1],list12[y1],list12[z1] #分别给三才赋值活六神\nnumber1,number2,number3 = dict2.get(x3),dict2.get(y3),dict2.get(z3) #调用字典将五行与列表数字对应\nlist13,list14,list15=globals()[f'list{number1}'],globals()[f'list{number2}'],globals()[f'list{number3}'] #使用globals()作用于全局区别于locals()只能在一个函数局部内返回变量，生成三才对应的十二长生列表\n```\n\n​\t由于python自带的以及库中的居中对齐功能无法正常使用，为了美观增加了根据字数增加空格的函数。\n\n```python\ndef print_xyz(x,y,z): #封装成函数\n   x_len,y_len,z_len = len(x),len(y),len(z)\n   if x_len == 1 and y_len == 1 and z_len == 1:\n      print('', x, ' ', y, ' ', z)\n   elif x_len == 2 and y_len == 1 and z_len == 1:\n      print(x, '', y, ' ', z)\n   elif x_len == 2 and y_len == 2 and z_len == 1:\n      print(x, y, '', z)\n   elif x_len == 2 and y_len == 1 and z_len == 2:\n      print(x, '', y, '', z)\n   elif x_len == 1 and y_len == 2 and z_len == 1:\n      print('', x, '', y, '', z)\n   elif x_len == 1 and y_len == 2 and z_len == 2:\n      print('', x, '', y, z)\n   elif x_len == 1 and y_len == 1 and z_len == 2:\n      print('', x, ' ', y, '', z)\n   else:\n      print(x, y, z)\n\n```\n\n​\t以下是完整代码。\n\n```python\nlist1=['子','丑','丑','寅','寅','卯','卯','辰','辰','巳','巳','午','午','未','未','申','申','酉','酉','戌','戌','亥','亥','子'] #创建时辰列表\nlist2=['大安','留连','速喜','赤口','小吉','空亡'] #创建六宫列表\nlist3=['木','土','火','金','水','土'] #创建五行列表\nlist4=['东','四方','南','西','北','中央'] #创建方位列表\nlist5=['青龙','腾蛇','朱雀','白虎','玄武','勾陈'] #创建六神列表\nlist6=['沐浴','冠带','临官','帝旺','衰','死','病','墓','绝','胎','养','长生'] #创建木对应的十二长生列表\nlist7=['胎','养','长生','沐浴','冠带','临官','帝旺','衰','死','病','墓','绝'] #创建火对应的十二长生列表\nlist8=['死','病','墓','绝','胎','养','长生','沐浴','冠带','临官','帝旺','衰'] #创建金对应的十二长生列表\nlist9=['帝旺','衰','死','病','墓','绝','胎','养','长生','沐浴','冠带','临官'] #创建水，土对应的十二长生列表\nlist10=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23] #创建时间列表\nlist11=['青龙','朱雀','勾陈','白虎','玄武','腾蛇'] #创建活六神顺序列表\ndict1={'子': 1,'丑': 2,'寅': 3,'卯': 4,'辰': 5,'巳': 6,'午': 7,'未': 8,'申': 9,'酉': 10,'戌': 11,'亥': 12} #创建时辰字典\ndict2={'木':6,'火':7,'金':8,'水':9,'土':9}\nwhile True: #无限循环\n   try: #尝试运行可能出错的代码\n      time=int(input(\"以24时制输入当地当前时:\")) #获取时间  \n   except (ValueError, TypeError): #数值错误和数值类型错误时的处理\n      print(\"错误,输入数字有误,例:当前13:11,则输入13\")\n      continue #跳过下面的循环，防止因为上面错误导致time没有获取数值而使下面的判断报错\n   if time in list10: #判断输入数字是否为0~23\n      break #正常则执行下面的代码\n   else: #不符合则提示并循环\n      print(\"错误,输入数字有误,例:当前13:11,则输入13\")\nprint(\"输入心中立即想到的任意大小的正整数\")\nnumbers1 = [None, None, None]  # 用列表存储 x, y, z\nfor i in range(3): # 循环三次以获取三个数字\n    while True: #无限循环\n        try:\n            numbers1[i] = int(input(f\"请输入第 {i + 1} 个数字: \")) #使用f语句\n            if numbers1[i] <= 0:  # 检查输入的数字是否为正整数\n                print(\"输入数字有误，请输入正负整数\")\n            else:\n                break  # 如果输入有效，则退出当前的 while 循环\n        except (ValueError,TypeError):\n            print(\"输入数字有误，请输入正负整数\")\nx, y, z = numbers1 # 将输入的数字赋值给 x, y, z\ntime1 = list1[time] #将时间对应时辰\ntime2 = dict1.get(time1,'无效值') #调用字典将时辰与数字对应，time1上不用加''\ntime3 = time2%6 #对time2取余数，可知龙头宫位\nwhole = 6-time3 #得出青龙后还有几个元素作为整体\nelement=list11[:whole+1] #将青龙以及后面的元素作为整体\nx1,y1,z1= (x-1)%6,(x+y-2)%6,(x+y+z-3)%6 #分别取余数\nx2,y2,z2 = list2[x1],list2[y1],list2[z1] #分别给三才赋值六宫\nx3,y3,z3 = list3[x1],list3[y1],list3[z1] #分别给三才赋值五行\nx4,y4,z4 = list4[x1],list4[y1],list4[z1] #分别给三才赋值方位\nif time3 == 1:\n   list12=list11\nelif time3 == 0:\n   list12=['朱雀','勾陈','白虎','玄武','腾蛇','青龙']\nelse:\n   list12=[x for x in list11 if x not in element]+element #先遍历列表8不属于整体的元素再加上整体中的元素生成新列表10\nx5,y5,z5 = list5[x1],list5[y1],list5[z1] #分别给三才赋值六神\nx6,y6,z6 = list12[x1],list12[y1],list12[z1] #分别给三才赋值活六神\nnumber1,number2,number3 = dict2.get(x3),dict2.get(y3),dict2.get(z3) #调用字典将五行与列表数字对应\nlist13,list14,list15=globals()[f'list{number1}'],globals()[f'list{number2}'],globals()[f'list{number3}'] #使用globals()作用于全局区别于locals()只能在一个函数局部内返回变量，生成三才对应的十二长生列表\nx7,y7,z7 =list13[time2-1],list14[time2-1],list15[time2-1]\ntime_len = len(str(time))\nif time_len == 1:\n   print('时间','',time,'  ',time1)\nelse:\n   print('时间','',time,' ',time1)\nprint(x2,y2,z2)\nprint('',x3,' ',y3,' ',z3)\ndef print_xyz(x,y,z): #封装成函数\n   x_len,y_len,z_len = len(x),len(y),len(z)\n   if x_len == 1 and y_len == 1 and z_len == 1:\n      print('', x, ' ', y, ' ', z)\n   elif x_len == 2 and y_len == 1 and z_len == 1:\n      print(x, '', y, ' ', z)\n   elif x_len == 2 and y_len == 2 and z_len == 1:\n      print(x, y, '', z)\n   elif x_len == 2 and y_len == 1 and z_len == 2:\n      print(x, '', y, '', z)\n   elif x_len == 1 and y_len == 2 and z_len == 1:\n      print('', x, '', y, '', z)\n   elif x_len == 1 and y_len == 2 and z_len == 2:\n      print('', x, '', y, z)\n   elif x_len == 1 and y_len == 1 and z_len == 2:\n      print('', x, ' ', y, '', z)\n   else:\n      print(x, y, z)\nprint_xyz(x4,y4,z4) #调用函数\nprint(x5,y5,z5)\nprint(x6,y6,z6)\nprint_xyz(x7,y7,z7) #调用函数\ninput(\"按下Enter退出\")\n```\n\n\n\n\n\n","tags":["术数"]},{"title":"第一篇文章","url":"/2025/02/08/1/","content":"\n123\n"},{"title":"Hello World","url":"/2025/02/08/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]